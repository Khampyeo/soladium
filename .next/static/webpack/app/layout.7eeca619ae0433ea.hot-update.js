"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./src/apis/authenticate.api.ts":
/*!**************************************!*\
  !*** ./src/apis/authenticate.api.ts ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   login: function() { return /* binding */ login; },\n/* harmony export */   logout: function() { return /* binding */ logout; }\n/* harmony export */ });\n// import { fetchApi } from \"@/configs/fetchApi\";\nconst login = async (body)=>{\n    // const response = await fetchApi.post<LoginResult>(\"/account/login\", body);\n    const { userNameOrEmailAddress, password } = body;\n    if (userNameOrEmailAddress === \"phuc6868@gmail.com\" && password === \"@Phuc123\") {\n        return {\n            result: \"success\",\n            description: \"login success\"\n        };\n    } else {\n        throw new Error(\"Invalid username or password\");\n    }\n};\nconst logout = async ()=>{\n    // const response = await fetchApi.get(\"/account/logout\");\n    console.log(\"User has been logged out.\");\n    return {\n        message: \"Logout successful\"\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcGlzL2F1dGhlbnRpY2F0ZS5hcGkudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxpREFBaUQ7QUFHMUMsTUFBTUEsUUFBUSxPQUFPQztJQUMxQiw2RUFBNkU7SUFDN0UsTUFBTSxFQUFFQyxzQkFBc0IsRUFBRUMsUUFBUSxFQUFFLEdBQUdGO0lBQzdDLElBQ0VDLDJCQUEyQix3QkFDM0JDLGFBQWEsWUFDYjtRQUNBLE9BQU87WUFDTEMsUUFBUTtZQUNSQyxhQUFhO1FBQ2Y7SUFDRixPQUFPO1FBQ0wsTUFBTSxJQUFJQyxNQUFNO0lBQ2xCO0FBQ0YsRUFBRTtBQUVLLE1BQU1DLFNBQVM7SUFDcEIsMERBQTBEO0lBRTFEQyxRQUFRQyxHQUFHLENBQUM7SUFFWixPQUFPO1FBQ0xDLFNBQVM7SUFDWDtBQUNGLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2FwaXMvYXV0aGVudGljYXRlLmFwaS50cz9lMTEyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGltcG9ydCB7IGZldGNoQXBpIH0gZnJvbSBcIkAvY29uZmlncy9mZXRjaEFwaVwiO1xuaW1wb3J0IHsgTG9naW5SZXF1ZXN0IH0gZnJvbSBcIkAvdHlwZXMvYXV0aGVudGljYXRlXCI7XG5cbmV4cG9ydCBjb25zdCBsb2dpbiA9IGFzeW5jIChib2R5OiBMb2dpblJlcXVlc3QpID0+IHtcbiAgLy8gY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaEFwaS5wb3N0PExvZ2luUmVzdWx0PihcIi9hY2NvdW50L2xvZ2luXCIsIGJvZHkpO1xuICBjb25zdCB7IHVzZXJOYW1lT3JFbWFpbEFkZHJlc3MsIHBhc3N3b3JkIH0gPSBib2R5O1xuICBpZiAoXG4gICAgdXNlck5hbWVPckVtYWlsQWRkcmVzcyA9PT0gXCJwaHVjNjg2OEBnbWFpbC5jb21cIiAmJlxuICAgIHBhc3N3b3JkID09PSBcIkBQaHVjMTIzXCJcbiAgKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHJlc3VsdDogXCJzdWNjZXNzXCIsXG4gICAgICBkZXNjcmlwdGlvbjogXCJsb2dpbiBzdWNjZXNzXCIsXG4gICAgfTtcbiAgfSBlbHNlIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHVzZXJuYW1lIG9yIHBhc3N3b3JkXCIpO1xuICB9XG59O1xuXG5leHBvcnQgY29uc3QgbG9nb3V0ID0gYXN5bmMgKCkgPT4ge1xuICAvLyBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoQXBpLmdldChcIi9hY2NvdW50L2xvZ291dFwiKTtcblxuICBjb25zb2xlLmxvZyhcIlVzZXIgaGFzIGJlZW4gbG9nZ2VkIG91dC5cIik7XG5cbiAgcmV0dXJuIHtcbiAgICBtZXNzYWdlOiBcIkxvZ291dCBzdWNjZXNzZnVsXCIsXG4gIH07XG59O1xuIl0sIm5hbWVzIjpbImxvZ2luIiwiYm9keSIsInVzZXJOYW1lT3JFbWFpbEFkZHJlc3MiLCJwYXNzd29yZCIsInJlc3VsdCIsImRlc2NyaXB0aW9uIiwiRXJyb3IiLCJsb2dvdXQiLCJjb25zb2xlIiwibG9nIiwibWVzc2FnZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/apis/authenticate.api.ts\n"));

/***/ })

});